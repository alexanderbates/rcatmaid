% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/catmaid_nat.R
\name{read.neuron.catmaid}
\alias{read.neuron.catmaid}
\alias{read.neurons.catmaid}
\title{Read neuron(s) from CATMAID server into NeuroAnatomy Toolbox (nat) format}
\usage{
read.neuron.catmaid(skid, pid = 1L, conn = NULL, ...)

read.neurons.catmaid(skids, pid = 1L, conn = NULL, OmitFailures = NA,
  df = NULL, ...)
}
\arguments{
\item{skid,skids}{One or more skeleton ids}

\item{pid}{Project id (default 1)}

\item{conn}{A \code{catmaid_connection} objection returned by
\code{\link{catmaid_login}}. If \code{NULL} (the default) a new connection
object will be generated using the values of the \bold{catmaid.*} package
options as described in the help for \code{\link{catmaid_login}}.}

\item{...}{Additional arguments passed to the catmaid_fetch function}

\item{OmitFailures}{Whether to omit neurons for which \code{FUN} gives an
error. The default value (\code{NA}) will result in nlapply stopping with
an error message the moment there is an eror. For other values, see
details.}

\item{df}{Optional data frame containing information about each neuron}
}
\description{
\code{read.neuron.catmaid} reads a single neuron, while
\code{read.neurons.catmaid} generates a \code{\link[nat]{neuronlist}} object
including some metadata information.
}
\details{
These functions provide a bridge between CATMAID and the
  neuronanatomy toolbox R package (\url{https://github.com/jefferis/nat}),
  which provides extensive functionality for analysing and plotting neurons
  within the context of temaplate brains.

  Note that the soma is set by inspecting CATMAID tags that
  (case-insensitively) match the regex \code{"(cell body|soma)"}. Where >1
  tag exists the one that tags an endpoint is preferred.

When \code{OmitFailures} is not \code{NA}, \code{FUN} will be
  wrapped in a call to \code{try} to ensure that failure for any single
  neuron does not abort the nlapply/nmapply call. When
  \code{OmitFailures=TRUE} the resultant neuronlist will be subsetted down to
  return values for which \code{FUN} evaluated successfully. When
  \code{OmitFailures=FALSE}, "try-error" objects will be left in place. In
  either of the last 2 cases error messages will not be printed because the
  call is wrapped as \code{try(expr, silent=TRUE)}.

  The optional dataframe (\code{df}) detailing each neuron should have
  \code{rownames} that match the names of each neuron. It would also make
  sense if the same key was present in a column of the data frame. If the
  dataframe contains more rows than neurons, the superfluous rows are dropped
  with a warning. If the dataframe is missing rows for some neurons an error
  is generated. If SortOnUpdate is TRUE then updating an existing neuronlist
  should result in a new neuronlist with ordering identical to reading all
  neurons from scratch.
}
\examples{
\dontrun{
library(nat)
nl=read.neurons.catmaid(c(10418394,4453485), pid=1)
plot3d(nl)

## Full worked example looking at Olfactory Receptor Neurons
# Find ORNs
conn=catmaid_login()
# note use of regex in query
orn_query=catmaid_query_by_name("ORN (left|right)")

# Tidy up result data.frame keeping only neurons
orn_query=subset(orn_query, type=='neuron')
# find the Odorant receptor genes and the side of brain
orn_query=transform(orn_query,
   side=factor(ifelse(grepl("left",name), "L", "R")),
   Or= factor(sub(" ORN.*", "", name)))
# a table of odorant receptor / side of brain
ftable(side~Or,data=orn_query)

# set rownames for data.frame so that we can plot neurons by skeleton id
rownames(orn_query)=orn_query$skid

# now fetch those neurons with progress bar, dropping any failures
orns=read.neurons.catmaid(orn_query$skid, pid=1, df=orn_query,
  OmitFailures = T, .progress='text')

# now some plots
open3d()
# colour by side of brain
plot3d(orns, col=side)
clear3d()
# colour by Odorant Receptor
# note similar position of axon terminals for same ORN class on left and right
plot3d(orns, col=Or)
}
}
\seealso{
\code{\link{catmaid_fetch}}
}

